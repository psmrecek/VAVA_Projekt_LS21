/*
 * VAVA project
 * Esport League by Martin Schön and Peter Smreček
 * FIIT STU, 2021
 */
package sk.stu.fiit.gui.user.message;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import org.apache.log4j.Logger;
import sk.stu.fiit.data.Lists;
import sk.stu.fiit.team.Team;
import sk.stu.fiit.user.Player;
import sk.stu.fiit.user.User;
import sk.stu.fiit.user.message.TeamInvitation;

/**
 * For team invitations  in app uses class <code>NewInvitationWindow</code>. 
 * It allows admin {@link Player} to invite other players into theirs {@link Team}
 * via {@link TeamInvitation}.
 * 
 * 
 * @see Player
 * @see Team
 * @see TeamInvitation
 */
public class NewInvitationWindow extends javax.swing.JFrame {
    private ArrayList<User> contacts = new ArrayList<>();
    private final User user;
    private final Lists lists;
    
    public NewInvitationWindow(User user, Lists lists){
        initComponents();
        this.user = user;
        this.lists = lists;
        updateAll();
    }
    
    private void updateAll(){
        this.contacts = lists.getFreePlayers();
 
        String[] con = new String[this.contacts.size()];
        
        for(int item = 0; item < this.contacts.size(); item++)
            con[item] = this.contacts.get(item).getName();
        contactList.setListData(con);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        contactList = new javax.swing.JList<>();
        inviteButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        bodyTextArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nová pozvánka");
        setResizable(false);

        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel1Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel1.setLayout(jPanel1Layout);

        jScrollPane1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jScrollPane1.setMinimumSize(new java.awt.Dimension(259, 131));

        contactList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        contactList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        contactList.setMaximumSize(new java.awt.Dimension(230, 125));
        contactList.setMinimumSize(new java.awt.Dimension(230, 125));
        contactList.setPreferredSize(new java.awt.Dimension(230, 125));
        jScrollPane1.setViewportView(contactList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        inviteButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        inviteButton.setText("Pozvať");
        inviteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                inviteButtonMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 5;
        jPanel1.add(inviteButton, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Kontakty");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        jPanel1.add(jLabel1, gridBagConstraints);

        jScrollPane3.setAutoscrolls(true);
        jScrollPane3.setMinimumSize(new java.awt.Dimension(240, 100));
        jScrollPane3.setPreferredSize(new java.awt.Dimension(240, 100));

        bodyTextArea.setColumns(20);
        bodyTextArea.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bodyTextArea.setLineWrap(true);
        bodyTextArea.setRows(5);
        bodyTextArea.setWrapStyleWord(true);
        bodyTextArea.setMinimumSize(new java.awt.Dimension(240, 100));
        jScrollPane3.setViewportView(bodyTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        jPanel1.add(jScrollPane3, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Text");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 102));
        jLabel4.setText("Pozvánka do tímu");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        jPanel1.add(jLabel4, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inviteButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inviteButtonMouseReleased
        String head = "Pozvánka od "+((Player)this.user).getTeam().getName();
        String body = bodyTextArea.getText().trim();
       
       if(Boolean.logicalOr(head.isEmpty(), body.isEmpty())){
           JOptionPane.showMessageDialog(rootPane, "Je potrebné vyplniť telo pozvánky", "Problém pri vypĺňaní pozvánky" , JOptionPane.WARNING_MESSAGE);
           Logger.getLogger(this.getClass().getName()).error("Empty body in invitation from user "+this.user.getNickname());
           return;
       }
        
       TeamInvitation invitation = new TeamInvitation(head, body, this.user, ((Player)this.user).getTeam());
        for(int index = 0; index < contacts.size(); index++){
            if(contactList.isSelectedIndex(index)){
                contacts.get(index).addMessage(invitation);
                Logger.getLogger(this.getClass().getName()).info("Invite succesfully sent to "+contacts.get(index).getNickname());
                JOptionPane.showMessageDialog(rootPane, "Pozvánka úspešne odoslaná");
                Logger.getLogger(this.getClass().getName()).info("TeamInvitation sending was succesful");
                this.dispose();
                return;
            }     
        }
        JOptionPane.showMessageDialog(rootPane, "Vyber prijíemcu z tabuľky kontaktov!" , "Chyba pri výbere kontaktu" ,JOptionPane.WARNING_MESSAGE);
        Logger.getLogger(this.getClass().getName()).error("Receiver choice not done");
    }//GEN-LAST:event_inviteButtonMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea bodyTextArea;
    private javax.swing.JList<String> contactList;
    private javax.swing.JButton inviteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
